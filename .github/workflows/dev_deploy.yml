#name: Maeummal CI/CD
#
#on:
#  pull_request:
#    types: [closed] # pull request 가 닫히면 즉, 머지가 됐을 때 돌아라!
#  workflow_dispatch: # (2).수동 실행도 가능하도록
#
#jobs:
#  build:
#    runs-on: ubuntu-latest # (3).OS환경 / 우분투 기반
#    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'develop'
#    # 머지가 되었는데, 머지가 된 대상이 'develop' 브랜치이면 돌아라!
#
#    steps:
#      - name: Checkout # 코드를 가져오는 것. 빌드를 할 코드를 가져오는 것. ( 이름은 본인이 지정 )
#        uses: actions/checkout@v2 # (4).코드 check out
#        # 리포지터리 최상단부터 체크 아웃 함
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: 17 # (5).자바 설치
#          distribution: 'adopt'
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x ./gradlew
#        shell: bash # (6).권한 부여
#
#      - name: Build with Gradle
#        run: ./gradlew clean build -x test # gradlew에 권한 줌
#        shell: bash # (7).build 시작
#
#      - name: Get current time
#        uses: 1466587594/get-current-time@v2
#        id: current-time
#        with:
#          format: YYYY-MM-DDTHH-mm-ss
#          utcOffset: "+09:00" # (8).build 시점의 시간확보
#
#      - name: Show Current Time
#        run: echo "CurrentTime=$"
#        shell: bash # (9).확보한 시간 보여주기
#
#      - name: Generate deployment package # 빌드하는 과정
#        run: |
#          mkdir -p deploy
#          cp build/libs/*.jar deploy/application.jar
#          cp Procfile deploy/Procfile
#          cp -r .ebextensions_dev deploy/.ebextensions
#          cp -r .platform deploy/.platform
#          cd deploy && zip -r deploy.zip .
#
#      - name: Beanstalk Deploy
#        uses: einaregilsson/beanstalk-deploy@v20
#        with:
#          aws_access_key: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
#          aws_secret_key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
#          application_name: maeummal-dev # 프로젝트명
#          environment_name: Maeummal-dev-env # 프로젝트명
#          version_label: github-action-${{ steps.current-time.outputs.formattedTime }}
#          region: ap-northeast-2
#          deployment_package: deploy/deploy.zip
#          wait_for_deployment: false

#name: Java CI with Gradle
#
#on:
#  push:
#    branches: develop
#  pull_request:
#    branches: develop
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: '11'
#          distribution: 'adopt'
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#      - name: Build with Gradle
#        run: ./gradlew build
#      - name: Docker build
#        run: |
#          docker login -u ${{ secrets.USERNAME }} -p ${{ secrets.PASSWORD }}
#          docker build -t maeummal-cicd .
#          docker tag maeummal-cicd maeummal/maeummal-cicd:${GITHUB_SHA::7}
#          docker push maeummal/maeummal-cicd:${GITHUB_SHA::7}

name: Maeummal CI/CD

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # Spring Boot 어플리케이션 Build (1)
      - name: Spring Boot Build
        run: ./gradlew clean build --exclude-task test

      # Docker 이미지 Build (2)
      - name: docker image build
        run: docker build -t maeummal/maeummal-cicd .

      # DockerHub Login (3)
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}

      # Docker Hub push (4)
      - name: docker Hub push
        run: docker push maeummal/maeummal-cicd
